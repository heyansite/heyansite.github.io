(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{441:function(s,t,a){s.exports=a.p+"assets/img/splunkstart3-1.6050e07f.png"},442:function(s,t,a){s.exports=a.p+"assets/img/splunkstart3-2.de111d2b.png"},443:function(s,t,a){s.exports=a.p+"assets/img/splunkstart3-3.d8b99e3c.png"},444:function(s,t,a){s.exports=a.p+"assets/img/splunkstart3-4.a101ff00.png"},760:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"splunk-fundamentals-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#splunk-fundamentals-3"}},[s._v("#")]),s._v(" Splunk Fundamentals 3")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("参考")]),s._v(" "),n("ul",[n("li",[s._v("官网付费Course ("),n("em",[s._v("based on version: 7.x")]),s._v(")")])])]),s._v(" "),n("h2",{attrs:{id:"exploring-statistical-commands"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exploring-statistical-commands"}},[s._v("#")]),s._v(" Exploring Statistical Commands")]),s._v(" "),n("h3",{attrs:{id:"reviewing-the-stats-command"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reviewing-the-stats-command"}},[s._v("#")]),s._v(" Reviewing the stats Command")]),s._v(" "),n("ul",[n("li",[s._v("Enables you to calculate statistics on data that match your search criteria")]),s._v(" "),n("li",[s._v("stats functions you’ve seen in previous courses include:\n"),n("ul",[n("li",[n("strong",[s._v("count")]),s._v(": returns the number of events that match the search criteria")]),s._v(" "),n("li",[n("strong",[s._v("distinct_count")]),s._v(" or "),n("strong",[s._v("dc")]),s._v(": returns a count of unique values for a given field - sum: returns a sum of numeric values")]),s._v(" "),n("li",[n("strong",[s._v("list")]),s._v(": lists all values of a given field")]),s._v(" "),n("li",[n("strong",[s._v("values")]),s._v(": lists unique values of a given field")])])])]),s._v(" "),n("h3",{attrs:{id:"performing-statistical-analysis-with-stats-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#performing-statistical-analysis-with-stats-functions"}},[s._v("#")]),s._v(" Performing Statistical Analysis with stats Functions")]),s._v(" "),n("p",[s._v("A variety of other stats functions are available for more detailed statistical information, including:")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("min")]),s._v(": minimum value")]),s._v(" "),n("li",[n("strong",[s._v("max")]),s._v(": maximum value")]),s._v(" "),n("li",[n("strong",[s._v("avg")]),s._v(" or "),n("strong",[s._v("mean")]),s._v(": average value")]),s._v(" "),n("li",[n("strong",[s._v("median")]),s._v(": “middle” value")]),s._v(" "),n("li",[n("strong",[s._v("range")]),s._v(": difference between minimum and maximum values")]),s._v(" "),n("li",[n("strong",[s._v("stdev")]),s._v("（标准差）: standard deviation (measure of the extent of deviation of the values)")]),s._v(" "),n("li",[n("strong",[s._v("var")]),s._v("（方差）: variance (measure of how far the values are spread out)")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sales sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("vendor_sales VendorID"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" VendorID"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" sum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Minimum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Maximum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Range"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Average"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" median"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Median"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \nstdev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" sdev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" var"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Variance "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" VendorCountry\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval Average "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Average"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sdev "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sdev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Variance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Variance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("sum\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rename")]),s._v(" count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Units Sold"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sum "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Total Sales"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sdev "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Standard Deviation"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("blockquote",[n("p",[s._v("标准差：是离均差平方的算术平均数（即：方差）的算术平方根")]),s._v(" "),n("p",[s._v("方差=标准差的平方")])]),s._v(" "),n("div",{staticStyle:{display:"flex"}},[n("img",{staticStyle:{zoom:"100%",display:"block"},attrs:{src:a(441),alt:"",align:"left"}})]),s._v(" "),n("h3",{attrs:{id:"fieldsummary-command"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fieldsummary-command"}},[s._v("#")]),s._v(" fieldsummary Command")]),s._v(" "),n("ul",[n("li",[s._v("Calculates a variety of summary stats for all or a subset of fields")]),s._v(" "),n("li",[s._v("Displays summary info as results table")]),s._v(" "),n("li",[s._v("Syntax: "),n("code",[s._v("... | fieldsummary [maxvals=num] [field-list]")])]),s._v(" "),n("li",[s._v("Takes optional arguments\n"),n("ul",[n("li",[s._v("maxvals: maximum distinct values to return for each field")]),s._v(" "),n("li",[s._v("field-list: list of fields to calculate statistics for")])])])]),s._v(" "),n("h3",{attrs:{id:"fieldsummary-results-table-contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fieldsummary-results-table-contents"}},[s._v("#")]),s._v(" fieldsummary Results Table Contents")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("field")]),s._v(": field name")]),s._v(" "),n("li",[n("strong",[s._v("count")]),s._v(": number of events with that field")]),s._v(" "),n("li",[n("strong",[s._v("distinct_count")]),s._v(": number of unique values in field")]),s._v(" "),n("li",[n("strong",[s._v("is_exact")]),s._v(": Boolean (0 or 1) indicating whether distinct_count is exact")]),s._v(" "),n("li",[n("strong",[s._v("mean")]),s._v(" (if field numeric)")]),s._v(" "),n("li",[n("strong",[s._v("min")]),s._v(" (if field numeric)")]),s._v(" "),n("li",[n("strong",[s._v("numeric_count")]),s._v(": count of numeric values in field")]),s._v(" "),n("li",[n("strong",[s._v("stdev")]),s._v(" (if field numeric)")]),s._v(" "),n("li",[n("strong",[s._v("values")]),s._v(": distinct values of field and count of each value - 如果distinct值很多，可使用maxval限制")]),s._v(" "),n("li",[n("strong",[s._v("max")]),s._v(" (if field numeric)")])]),s._v(" "),n("blockquote",[n("p",[s._v("if no maxvals is specified, then is_exact will always equal 1.")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nA data scientist at Buttercup Games wants to study the variance of data in all \nWeb events collected over the past 15 minutes.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web earliest"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("m latest"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("now \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" fieldsummary\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nSecOps manager wants to compare a sampling of IP addresses from \nthe security index over the past 24 hours.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("security earliest"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("h latest"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("now\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" fieldsummary maxvals"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" bcg_ip src_ip\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"appendpipe-command"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#appendpipe-command"}},[s._v("#")]),s._v(" appendpipe Command")]),s._v(" "),n("ul",[n("li",[s._v("appendpipe\n"),n("ol",[n("li",[s._v("Takes the existing results and pushes them into the sub-pipeline")]),s._v(" "),n("li",[s._v("Then, appends the result of the sub-pipeline as new lines to the outer search")])])]),s._v(" "),n("li",[s._v("Results are displayed in-line")]),s._v(" "),n("li",[s._v("Example: appendpipe [stats sum(count) as count by usage]")])]),s._v(" "),n("h3",{attrs:{id:"appendpipe-command-–-subtotals"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#appendpipe-command-–-subtotals"}},[s._v("#")]),s._v(" appendpipe Command – Subtotals")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nIT wants to find the number of non-business related connections \nto the Internet for the last 24 hours, by user and total attempts by usage.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n• Look for usage other than\nBusiness\n• Count number of connections by usage and user\n• Add a subtotal below each group of usage values\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cisco_wsa_squid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v("Business \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cs_username \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" appendpipe "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*Use eval to provide a description for the accumulated field*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cisco_wsa_squid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v("Business \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cs_username\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" appendpipe "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),s._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval cs_username"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Total for usage of "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"appendpipe-command-–-grand-total"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#appendpipe-command-–-grand-total"}},[s._v("#")]),s._v(" appendpipe Command – Grand Total")]),s._v(" "),n("ul",[n("li",[s._v("Can use multiple appendpipe commands")]),s._v(" "),n("li",[s._v("The second appendpipe adds a grand total to the end of the report")]),s._v(" "),n("li",[s._v("If there is more than one page, the grand total displays on the last page")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario: \nSec Ops wants the number of non- business related connections to the Internet for the last 4 hours, \nby user and total attempts by usage. They also want a subtotal of total attempts by usage and a grand total.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cisco_wsa_squid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v("Business \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cs_username\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" appendpipe "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),s._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval cs_username "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Total for usage of "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" appendpipe "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("search cs_username"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Total for*"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" count\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval cs_username "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GRAND TOTAL"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" count\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("div",{staticStyle:{display:"flex"}},[n("img",{staticStyle:{zoom:"100%",display:"block"},attrs:{src:a(442),alt:"",align:"left"}})]),s._v(" "),n("h3",{attrs:{id:"using-count-and-list-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-count-and-list-functions"}},[s._v("#")]),s._v(" Using count and list Functions")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("action")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("purchase "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" host"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" product_name\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("使用上面的语句，我们会得到下图左边的结果。")]),s._v(" "),n("div",{staticStyle:{display:"flex"}},[n("img",{staticStyle:{zoom:"100%",display:"block"},attrs:{src:a(443),alt:"",align:"left"}})]),s._v(" "),n("p",[s._v("要想得到右边这种更加友好的结果，使用如下语句")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("action")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("purchase "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" host"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" product_name\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("count\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("product_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Product Name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n\t\tlist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Count  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" host\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nSorted descending by count, per host\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*sum(count) as total sums the count values for each host into a new field called total\n– Used to sort\n– Removed from results\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined product_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" host"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" product_name\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("count\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("product_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Product Name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" total "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" host\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("total\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fields")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" total\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"eventstats-command"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eventstats-command"}},[s._v("#")]),s._v(" eventstats Command")]),s._v(" "),n("ul",[n("li",[s._v("Generates summary statistics of all existing fields in your search results （也就是eventstats 是对最初search的结果进行统计，而不是对上一个pipline的结果）")]),s._v(" "),n("li",[s._v("Saves them as values in new fields")]),s._v(" "),n("li",[s._v("Both original fields and summary stats are then available for calculations")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nFor a new campaign, \nthe online sales manager wants a display of products that \nare losing more sales than the average during the last 24 hours.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("action")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("remove\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" chart "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" lostSales "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" product_name\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eventstats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lostSales"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" averageLoss\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" lostSales "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" averageLoss\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("lostSales\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fields")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" averageLoss\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n• Find the aggregate ‘lost sales’ by product\n• Use eventstats to calculate the average loss\n*/")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nThe sales team want to know the lowest and highest sales totals during the previous week \n– and on which days they occurred.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" timechart "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" totalSales\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eventstats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("totalSales"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" highest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("totalSales"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" lowest \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" totalSales"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("highest "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" totalSales"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("lowest \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval Outcome "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("totalSales"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("highest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Highest"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Lowest"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Day")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" strftime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%A"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Day")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Outcome"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" totalSales\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval totalSales "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tostring"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("totalSales"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commas"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\nresult:\n----------------------------------------\n|Day\t\t|Outcome\t|totalSales|\n|Monday\t\t|Lowest\t\t|$46,994.83|\n|Saturday\t|Highest\t|$51,616.77|\n----------------------------------------\n\n- Using min, determine the lowest value\n- Using max, determine the highest value\n- Label highest and lowest values\n- Label day of the week\n*/")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h3",{attrs:{id:"streamstats-command"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#streamstats-command"}},[s._v("#")]),s._v(" streamstats Command")]),s._v(" "),n("ul",[n("li",[s._v("Like eventstats command, calculates summary stats on search results and aggregates stats to original data (和eventstats一样，对search后的源结果进行总结统计)")]),s._v(" "),n("li",[s._v("But:\n"),n("ul",[n("li",[s._v("stats and eventstats work on the entire results")]),s._v(" "),n("li",[s._v("streamstats calculates statistics "),n("em",[s._v("for each result row at the time the command encounters it")])])])])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nSales wants to monitor a moving average of the price of a purchase on the Buttercup Games website \nover the previous 20 purchases during the last 24 hours.\n*/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("action")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("purchase "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" productId"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" _time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" price\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort _time\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" streamstats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" averageOrder\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("current")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("f window"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n• Calculate the average price over the past 20 events (window=20)\n• Do not include current event in summary calculations (current=f)\n*/")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nSecOps manager wants the network failures for the last 4 hours by user with the IPs, rank and number of failures.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("security sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("linux_secure fail"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" src_ip\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("count\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" streamstats count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" ip_order "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ip_order"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" ip_order"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("src_ip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" suspectIPs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" count "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("div",{staticStyle:{display:"flex"}},[n("img",{staticStyle:{zoom:"100%",display:"block"},attrs:{src:a(444),alt:"",align:"left"}})]),s._v(" "),n("h2",{attrs:{id:"exploring-eval-command-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exploring-eval-command-functions"}},[s._v("#")]),s._v(" Exploring eval Command Functions")]),s._v(" "),n("h3",{attrs:{id:"ways-to-write-multiple-evals"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ways-to-write-multiple-evals"}},[s._v("#")]),s._v(" Ways to Write Multiple evals")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\nSeparate eval commands\n– The way multiple evals were written prior to Splunk 7.0\n– Still works, but no longer necessary\n*/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cisco_wsa_squid\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sc_bytes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" bytes "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval bandwidth "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" bytes"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval bandwidth "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bandwidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\nCombined eval command \n– Syntax allowed starting with Splunk 7.0\n– Easier and more concise\n*/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cisco_wsa_squid\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sc_bytes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" bytes "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval bandwidth "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" bytes"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nbandwidth "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bandwidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\nNested eval command\n– If same field is the target of multiple eval commands, you can nest them\n*/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cisco_wsa_squid\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sc_bytes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" bytes "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usage")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval bandwidth "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bytes"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*All 3 statements produce same results*/")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("h3",{attrs:{id:"eval-command-–-conversion-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eval-command-–-conversion-functions"}},[s._v("#")]),s._v(" eval Command – Conversion Functions")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("tostring")]),s._v(": converts a numeric field value to a string")]),s._v(" "),n("li",[n("strong",[s._v("tonumber")]),s._v(": converts a field or string value to numeric")]),s._v(" "),n("li",[n("strong",[s._v("printf")]),s._v(": builds a string value based on a string format and optional arguments")])]),s._v(" "),n("p",[n("strong",[s._v("tostring")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*\ntostring(field,"option")\nOptions:\n- "commas": applies commas\n\tIf the number includes decimals, rounds to two decimal places \n- "duration": formats the number as "hh:mm:ss"\n- "hex": formats the number in hexadecimal\n*/')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("action")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("purchase "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("503")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" NumberOfLostSales"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" AverageLostSales"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" TotalLostRevenue\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval AverageLostSales "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" tostring"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AverageLostSales"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commas"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n\tTotalLostRevenue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" tostring"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TotalLostRevenue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commas"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[n("strong",[s._v("tonumber")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\ntonumber(numstr[,base])\n- numstr may be field name or literal string value\n- Optional base may be 2 to 36\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// – Convert string values for the field store_sales to numeric")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval numeric_store_sales"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tonumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("store_sales"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//– Convert the octal number (base-8) 244 and the hexadecimal number (base-16)")]),s._v("\nA4 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("decimal")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval n1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tonumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"244"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" n2"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tonumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A4"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[n("strong",[s._v("printf")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*\n`printf("format",[arguments])`\n\n- Print formatting function, similar to printf used in C, C++, Java, etc.\n- format: character string with one or more format conversion specifiers, such as:\n    – %d or %i: integers\n    – %f or %F: floating point numbers\n    – %s or %z: strings\n    – %o: octal numbers (base-8)\n    – %x or %X or %p: hexadecimal numbers (base-16)\n- arguments: optional parameters that can control the width, precision, and value of format\n*/')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("action")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("purchase price"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" TotalRevenue "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" categoryId\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval FormattedTotalRevenue"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\nprintf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%.4f %-30s"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("TotalRevenue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Dollars"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" categoryId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" FormattedTotalRevenue\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\nFormats floating point number with 4 digits after decimal point\nLeft-justifies the value in a string field 30 spaces long (左对齐字符串字段中的值，长度为30个空格)\nAppends another value to the end of the string (在结果字符串后面 追加 “Dollars” - 例： “624.7000 Dollars”)\n*/")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("h3",{attrs:{id:"eval-command-–-date-and-time-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eval-command-–-date-and-time-functions"}},[s._v("#")]),s._v(" eval Command – Date and Time Functions")]),s._v(" "),n("ul",[n("li",[s._v("now(): returns the time a search was started")]),s._v(" "),n("li",[s._v("time(): returns the time an event was processed by the eval command")]),s._v(" "),n("li",[s._v("strftime: converts a timestamp to a string format")]),s._v(" "),n("li",[s._v("strptime: converts a time in string format and parses it into a timestamp")]),s._v(" "),n("li",[s._v("relative_time: returns a timestamp relative to a supplied time")])]),s._v(" "),n("h3",{attrs:{id:"eval-command-–-strftime-function"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eval-command-–-strftime-function"}},[s._v("#")]),s._v(" eval Command – strftime Function")]),s._v(" "),n("p",[n("code",[s._v("strftime(X,Y)")])]),s._v(" "),n("ul",[n("li",[s._v("strftime converts epoch time to a readable format")]),s._v(" "),n("li",[s._v("Uses variables such as:")])]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("Time")]),n("br"),s._v("\n%H 24 hour (00 to 23)"),n("br"),s._v("%T 24 hour (HMS) "),n("br"),s._v("%I 12 hour (01 to 12) "),n("br"),s._v("%M Minute (00 to 59) "),n("br"),s._v("%p AM or PM")]),s._v(" "),n("br"),s._v(" "),n("p",[n("strong",[s._v("Days")]),n("br"),s._v("\n%d Day of month (01 to 31)"),n("br"),s._v("%w Weekday (0 to 6)"),n("br"),s._v("%F %Y-%m-%d"),n("br"),s._v("%a Abbreviated weekday (Sun)"),n("br"),s._v("%A Weekday (Sunday)")]),s._v(" "),n("br"),s._v(" "),n("p",[n("strong",[s._v("Month")]),n("br"),s._v("\n%b Abbr month name (Jan)"),n("br"),s._v("%B Month name (January) "),n("br"),s._v("%m Month number (01 to 12)")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("Use strftime with the now() function to display the date on which the search is executed")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval searchDate"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("strftime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%B-%d-%Y"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("Use strftime with the time() function to display the time at which the event is processed by the eval command")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval eventTime"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("strftime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%I:%M %p"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nSalesOps wants to know what hourly retail sales were during the past 24 hours.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sales sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("vendor_sales\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" timechart span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("h "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" h_sales\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval h_sales "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" tostring"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h_sales"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commas"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Hour")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("strftime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%b %d, %I %p"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Hour")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" h_sales\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rename")]),s._v(" h_sales "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hourly Sales"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"eval-command-–-relative-time-function"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eval-command-–-relative-time-function"}},[s._v("#")]),s._v(" eval Command – relative_time Function")]),s._v(" "),n("p",[n("code",[s._v("relative_time(x,y)")])]),s._v(" "),n("ul",[n("li",[s._v("x = a time value and y = a relative time specifier")]),s._v(" "),n("li",[s._v("Relative time specifiers use time unit abbreviations such as:"),n("br"),s._v(" "),n("code",[s._v("s=seconds m=minutes h=hours d=days w=week mon=months y=year")])]),s._v(" "),n("li",[s._v("Example: return a timestamp one day prior to when the search was started and convert it into a string format"),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval yesterday"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("relative_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-1d@h"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval yesterday"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("strftime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("yesterday"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%F %H:%M"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])])]),s._v(" "),n("h3",{attrs:{id:"eval-command-–-strptime-function"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eval-command-–-strptime-function"}},[s._v("#")]),s._v(" eval Command – strptime Function")]),s._v(" "),n("p",[n("code",[s._v("strptime(x,y)")])]),s._v(" "),n("ul",[n("li",[s._v("x = a time represented by a string")]),s._v(" "),n("li",[s._v("y = a timestamp format (using same variables as strftime)")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nAdmin wants to find any web events that are lagging between when the event occured and when it was indexed in Splunk within the last 60 minutes.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval unix_req_time"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("strptime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("req_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d/%b/%Y:%H:%M:%S"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\ndelta"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("_indextime "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" unix_req_time\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rename")]),s._v(" _indextime "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" index_time\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" delta "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" clientip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" req_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" unix_req_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" delta \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"eval-command-–-lower-upper-substr"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eval-command-–-lower-upper-substr"}},[s._v("#")]),s._v(" eval Command – lower, upper, substr")]),s._v(" "),n("ul",[n("li",[s._v("lower(X): converts string to lower-case")]),s._v(" "),n("li",[s._v("upper(X): converts string to upper-case")]),s._v(" "),n("li",[s._v("substr(X,Y,Z) "),n("br"),s._v("\n– X is a string, Y and Z numerics"),n("br"),s._v("– Returns a substring of X, starting at the index specified by Y, with a length of Z "),n("br"),s._v("– If no Z specified, returns the rest of string starting with the index specified by Y")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nUser wants to create a new field with 3 first letters of categoryId, uppercase product name, and last digits of the itemId.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dedup product_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" categoryId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" itemId\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval lowercase_product"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("lower"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("product_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  uppercase_product"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("upper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("product_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  substr_category"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("substr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("categoryId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  substr_item"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("itemId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"EST-\\d {2}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  substr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("itemId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" substr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("itemId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" lowercase_product"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" uppercase_product"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  categoryId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" substr_category"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" itemId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" substr_item\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"eval-command-–-replace-function"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eval-command-–-replace-function"}},[s._v("#")]),s._v(" eval Command – replace Function")]),s._v(" "),n("p",[n("code",[s._v("replace(X,Y,Z)")])]),s._v(" "),n("ul",[n("li",[s._v("X, Y, and Z are all strings")]),s._v(" "),n("li",[s._v("Y contains a "),n("strong",[s._v("regex")])]),s._v(" "),n("li",[s._v("Returns a string formed by substituting Z for every occurrence of Y in X")]),s._v(" "),n("li",[s._v("Useful for masking data such as account numbers and IP addresses")]),s._v(" "),n("li",[s._v("As with all eval commands, doesn’t alter the indexed data nor write any new data to the index")])]),s._v(" "),n("p",[n("em",[s._v("Example")]),s._v(":")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nThe Legal department wants to be sure customer account number data is not exposed. Find the count of sales in the last hour by account number. Mask the account number in the result.\n\n- In this example, the customer account numbers in the indexed data is formatted: 9999-9999\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\nThe regex masks the account code by:\n– Retaining the first 4 digits and the hyphen (\\d{4}-), and\n– Replacing what follows, .*, with xxxx\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sales sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sales_entries\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("top")]),s._v(" AcctCode\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval AcctCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AcctCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\d{4}-).*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\1xxxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nShow sales information for the 3 best-selling products of the last 24 hours. Mask the middle octets of the customer IP addresses.\n*/")]),s._v("\n\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("web sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("access_combined\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" chart "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" totalSales "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("over")]),s._v(" clientip "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" product_name\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" useother"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("f\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval clientip "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("clientip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\d+\\.)\\d+\\.\\d+(\\.\\d+)"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\1xxx.xxx\\2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" fillnull\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"eval-command-–-if-function-review"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eval-command-–-if-function-review"}},[s._v("#")]),s._v(" eval Command – if Function Review")]),s._v(" "),n("p",[n("code",[s._v("if(X,Y,Z)")])]),s._v(" "),n("ul",[n("li",[s._v("The if function takes three arguments")]),s._v(" "),n("li",[s._v("Thefirstargument,X, isaBooleanexpression"),n("br"),s._v("- If it evaluates to TRUE, the result evaluates to the second argument, "),n("em",[s._v("Y")]),s._v(" "),n("br"),s._v("- If it evaluates to FALSE, the result evaluates to the third argument, "),n("em",[s._v("Z")])]),s._v(" "),n("li",[s._v("Non-numeric values must be enclosed in double quotes")]),s._v(" "),n("li",[s._v("Field values are treated in a case-sensitive manner")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Scenario:\nDisplay retail sales for the previous week, broken down by Asia and the Rest of the World.\n*/")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*\n• Create a new field, SalesTerritory \n• Evaluate VendorID\n\t– If >= 7000 AND < 8000 is TRUE, set result to "Asia"\n\t\t-Remember, arguments must be enclosed in quotes\n\t– If it evaluates to FALSE, set result to "Rest of the World"\n*/')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sales sourcetype"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("vendor_sales\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval SalesTerritory "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("VendorID "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" VendorID "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Asia"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Rest of the World"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" stats "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" TotalRevenue "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" SalesTerritory\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" eval TotalRevenue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" tostring"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TotalRevenue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commas"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);