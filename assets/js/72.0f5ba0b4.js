(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{460:function(t,v,a){t.exports=a.p+"assets/img/overview-1.727baff7.jpg"},768:function(t,v,a){"use strict";a.r(v);var s=a(0),_=Object(s.a)({},(function(){var t=this,v=t.$createElement,s=t._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"快速理解数据库全景图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速理解数据库全景图"}},[t._v("#")]),t._v(" 快速理解数据库全景图")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("此文为转载 （通常一篇文章会参考多处，也会添加自己的理解，引用地址如有遗漏，请指出）")]),t._v(" "),s("ul",[s("li",[t._v("https://blog.csdn.net/icycode/article/details/81008607")])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("数据库行业发展很快，细分领域产品层出不穷。尤其是NewSQL，都还未大规模使用，未来还未定数。此文的全景图只针对当前行业有个大概的了解，细节还需要随时跟踪学习。")])]),t._v(" "),s("br"),t._v(" "),s("p",[t._v('以下我们引用"451Group"分析报告中对数据库的分类，来对数据库做一个概览。')]),t._v(" "),s("div",{staticStyle:{display:"flex"}},[s("img",{staticStyle:{display:"block"},attrs:{src:a(460),alt:"",align:"left"}})]),t._v(" "),s("h2",{attrs:{id:"关系型数据库-rdbms-即sql数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库-rdbms-即sql数据库"}},[t._v("#")]),t._v(" "),s("strong",[t._v("关系型数据库(RDBMS,即SQL数据库)")])]),t._v(" "),s("ul",[s("li",[t._v("商业软件： Oracle，DB2，MSSQL ...")]),t._v(" "),s("li",[t._v("开源软件：MySQL，PostgreSQL ...\n"),s("ul",[s("li",[t._v("单机版本已经很难满足海量数据的需求")])])])]),t._v(" "),s("h2",{attrs:{id:"nosql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nosql"}},[t._v("#")]),t._v(" "),s("strong",[t._v("NoSQL")])]),t._v(" "),s("ul",[s("li",[t._v("NoSQL = Not Only SQL，意即“不仅仅是SQL，提倡运用非关系型的数据存储")]),t._v(" "),s("li",[t._v("普遍选择牺牲掉复杂 SQL 的支持及 ACID 事务换取弹性扩展能力")]),t._v(" "),s("li",[t._v("通常不保证强一致性的(支持最终一致)")])]),t._v(" "),s("p",[t._v("主要分类")]),t._v(" "),s("ul",[s("li",[t._v("键值（Key-Value）数据库：如 MemcacheDB，Redis")]),t._v(" "),s("li",[t._v("文档存储：如 MongoDB")]),t._v(" "),s("li",[t._v("列存储，方便存储结构化和半结构化数据，方便做数据压缩，对针对某一列或者某几列的查询有非常大的IO优势： 如 HBase，Cassandra")]),t._v(" "),s("li",[t._v("图数据库，存储图形关系(注意：不是图片)。如 Neo4J")])]),t._v(" "),s("h2",{attrs:{id:"newsql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#newsql"}},[t._v("#")]),t._v(" "),s("strong",[t._v("NewSQL")])]),t._v(" "),s("h3",{attrs:{id:"为什么需要newsql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要newsql"}},[t._v("#")]),t._v(" "),s("strong",[t._v("为什么需要NewSQL")])]),t._v(" "),s("ul",[s("li",[t._v("NoSQL 不能完全取代 RDBMS")]),t._v(" "),s("li",[t._v("单机RDBMS 无法满足性能需求")]),t._v(" "),s("li",[t._v("使用“单机RDBMS + 中间件”方式，在中间件层很难解决分布式事务、高可用问题")])]),t._v(" "),s("h3",{attrs:{id:"newsql定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#newsql定义"}},[t._v("#")]),t._v(" "),s("strong",[t._v("NewSQL定义")])]),t._v(" "),s("ul",[s("li",[t._v("针对OLTP的读写，提供与NOSQL相同的可扩展性和性能，同时能支持满足ACID特性的事务")]),t._v(" "),s("li",[t._v("即保持NoSQL的高可扩展和高性能，并且保持关系模型")])]),t._v(" "),s("h3",{attrs:{id:"newsql设计架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#newsql设计架构"}},[t._v("#")]),t._v(" "),s("strong",[t._v("NewSQL设计架构")])]),t._v(" "),s("ul",[s("li",[t._v("可以基于全新的数据库平台，也可以基于现有的SQL引擎优化。")]),t._v(" "),s("li",[t._v("无共享存储(MPP架构)是比较常见的架构")]),t._v(" "),s("li",[t._v("基于多副本实现高可用和容灾")]),t._v(" "),s("li",[t._v("分布式查询")]),t._v(" "),s("li",[t._v("数据Sharding机制")]),t._v(" "),s("li",[t._v("通过2PC，Paxos/Raft等协议实现数据一致")])]),t._v(" "),s("h3",{attrs:{id:"代表产品"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代表产品"}},[t._v("#")]),t._v(" "),s("strong",[t._v("代表产品")])]),t._v(" "),s("ul",[s("li",[t._v("Google Spanner")]),t._v(" "),s("li",[t._v("Cockroach DB")]),t._v(" "),s("li",[t._v("TiDB")]),t._v(" "),s("li",[t._v("OceanBase")]),t._v(" "),s("li",[t._v("X-DB")])]),t._v(" "),s("h2",{attrs:{id:"oltp和olap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oltp和olap"}},[t._v("#")]),t._v(" "),s("strong",[t._v("OLTP和OLAP")])]),t._v(" "),s("h3",{attrs:{id:"oltp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oltp"}},[t._v("#")]),t._v(" "),s("strong",[t._v("OLTP")])]),t._v(" "),s("ul",[s("li",[t._v("强调支持短时间内大量并发的小型操作（增删改查）能力，每个查询涉及的数据量都很小（比如几十到几百字节）")]),t._v(" "),s("li",[t._v("强调事务的强一致性（想想银行转账交易，容不得差错）")])]),t._v(" "),s("p",[t._v("举例：“双十一”期间，可能有几十万用户在同一秒内下订单。后台数据库要能够并发的、以近乎实时的速度处理这些订单请求（如果下了订单，十几分钟还没有反应，用户肯定要骂人了）")]),t._v(" "),s("h3",{attrs:{id:"olap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#olap"}},[t._v("#")]),t._v(" "),s("strong",[t._v("OLAP")])]),t._v(" "),s("ul",[s("li",[t._v("偏向于复杂的只读查询，读取海量数据进行分析计算，查询时间往往很长")])]),t._v(" "),s("p",[t._v("举例：“双十一”结束，淘宝的运营人员对订单进行分析挖掘，找出一些市场规律、分析刷单行为等等。这种分析可能需要读取所有的历史订单进行计算，耗时几十秒甚至几十分钟都有可能。")]),t._v(" "),s("p",[t._v("代表产品：")]),t._v(" "),s("ul",[s("li",[t._v("Greenplum")]),t._v(" "),s("li",[t._v("TeraData")]),t._v(" "),s("li",[t._v("阿里 AnalyticDB")])])])}),[],!1,null,null,null);v.default=_.exports}}]);